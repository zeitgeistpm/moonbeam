(function() {var implementors = {
"account":[["impl MaxEncodedLen for <a class=\"struct\" href=\"account/struct.AccountId20.html\" title=\"struct account::AccountId20\">AccountId20</a>"]],
"moonbase_runtime":[["impl MaxEncodedLen for <a class=\"enum\" href=\"moonbase_runtime/enum.OriginCaller.html\" title=\"enum moonbase_runtime::OriginCaller\">OriginCaller</a>"],["impl MaxEncodedLen for <a class=\"enum\" href=\"moonbase_runtime/governance/custom_origins/enum.Origin.html\" title=\"enum moonbase_runtime::governance::custom_origins::Origin\">Origin</a>"],["impl MaxEncodedLen for <a class=\"enum\" href=\"moonbase_runtime/enum.ProxyType.html\" title=\"enum moonbase_runtime::ProxyType\">ProxyType</a>"]],
"moonbeam_runtime":[["impl MaxEncodedLen for <a class=\"enum\" href=\"moonbeam_runtime/enum.OriginCaller.html\" title=\"enum moonbeam_runtime::OriginCaller\">OriginCaller</a>"],["impl MaxEncodedLen for <a class=\"enum\" href=\"moonbeam_runtime/governance/custom_origins/enum.Origin.html\" title=\"enum moonbeam_runtime::governance::custom_origins::Origin\">Origin</a>"],["impl MaxEncodedLen for <a class=\"enum\" href=\"moonbeam_runtime/enum.ProxyType.html\" title=\"enum moonbeam_runtime::ProxyType\">ProxyType</a>"]],
"moonriver_runtime":[["impl MaxEncodedLen for <a class=\"enum\" href=\"moonriver_runtime/enum.OriginCaller.html\" title=\"enum moonriver_runtime::OriginCaller\">OriginCaller</a>"],["impl MaxEncodedLen for <a class=\"enum\" href=\"moonriver_runtime/governance/custom_origins/enum.Origin.html\" title=\"enum moonriver_runtime::governance::custom_origins::Origin\">Origin</a>"],["impl MaxEncodedLen for <a class=\"enum\" href=\"moonriver_runtime/enum.ProxyType.html\" title=\"enum moonriver_runtime::ProxyType\">ProxyType</a>"]],
"pallet_ethereum_xcm":[["impl MaxEncodedLen for <a class=\"enum\" href=\"pallet_ethereum_xcm/enum.RawOrigin.html\" title=\"enum pallet_ethereum_xcm::RawOrigin\">RawOrigin</a>"]],
"pallet_parachain_staking":[["impl&lt;T&gt; MaxEncodedLen for <a class=\"struct\" href=\"pallet_parachain_staking/inflation/struct.Range.html\" title=\"struct pallet_parachain_staking::inflation::Range\">Range</a>&lt;T&gt;<span class=\"where fmt-newline\">where\n    T: MaxEncodedLen,</span>"]],
"pallet_xcm_transactor":[["impl&lt;CurrencyId&gt; MaxEncodedLen for <a class=\"struct\" href=\"pallet_xcm_transactor/pallet/struct.CurrencyPayment.html\" title=\"struct pallet_xcm_transactor::pallet::CurrencyPayment\">CurrencyPayment</a>&lt;CurrencyId&gt;<span class=\"where fmt-newline\">where\n    <a class=\"enum\" href=\"pallet_xcm_transactor/pallet/enum.Currency.html\" title=\"enum pallet_xcm_transactor::pallet::Currency\">Currency</a>&lt;CurrencyId&gt;: MaxEncodedLen,</span>"],["impl MaxEncodedLen for <a class=\"struct\" href=\"pallet_xcm_transactor/pallet/struct.RemoteTransactInfoWithMaxWeight.html\" title=\"struct pallet_xcm_transactor::pallet::RemoteTransactInfoWithMaxWeight\">RemoteTransactInfoWithMaxWeight</a>"]],
"precompile_utils":[["impl MaxEncodedLen for <a class=\"struct\" href=\"precompile_utils/testing/account/struct.MockAccount.html\" title=\"struct precompile_utils::testing::account::MockAccount\">MockAccount</a>"]]
};if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()